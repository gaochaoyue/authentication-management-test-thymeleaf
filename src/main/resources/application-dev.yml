server:
    port: 8083

jedis:
  host: localhost
  port: 6379
  password: 
  max_active: 1024
  max_idle: 200
  max_wait: 10000
  timeout: 100000
  
    
druid: 
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000

    # 用来检测连接是否有效的sql
    validationQuery: select CURRENT_DATE
    # 建议配置为true，不影响性能，并且保证安全性。
    # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnBorrow: false
    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false

    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙  stat,wall,log4j2
    filters: stat,wall
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat=true 
database:  
      mysql: 
        url: jdbc:mysql://localhost:3306/db_rbps1?useUnicode=true&amp;characterEncoding=UTF-8&allowMultiQueries=true&useSSL=true
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: 123    
      vertica: 
        driver-class-name: com.vertica.jdbc.Driver
        url: jdbc:vertica://192.168.1.144:5433/ecdb?ConnectionLoadBalance=1
        username: dbadmin
        password: Bboss123
eureka:
   client: 
     serviceUrl: 
       defaultZone: http://username:password@192.168.1.148:8761/eureka/
   instance:
       prefer-ip-address: true
       instanceId: ${spring.application.name}:${spring.application.instance_id:${server.port}}
        
      
      