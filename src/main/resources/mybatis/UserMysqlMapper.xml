<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bboss.dao.mysql.UserMysqlDao">
 
 	<resultMap type="com.bboss.model.UserInfo" id="UserResultMap">
		<id column="user_id" property="userId"/>
		<result column="auth_id" property="authId"/>
		<result column="auth_type" property="userType"/>
		<result column="auth_number" property="authNumber"/>
		<result column="auth_name" property="authName"/>
		<result column="create_time" property="createTime"/>
		<!-- <result column="role_id" property="roleId"/> -->
	</resultMap>
	
 	
 	<select id="findUserInfo" parameterType="map" resultMap="UserResultMap">
		select user_id,auth_id,auth_type,auth_number,auth_name,create_time
		from auth_user
		where auth_number = #{authNumber} and auth_type = #{userType}
	</select>
	
 	<update id="updateUserInfo" parameterType="com.bboss.model.UserInfo">
		UPDATE auth_user
		SET auth_id = #{authId},auth_number = #{authNumber},auth_name = #{authName},create_time = #{createTime}
		WHERE
			user_id = #{userId}
	</update>
	
	<insert id="insertUserInfo" parameterType="com.bboss.model.UserInfo">
		<selectKey keyProperty="userId" resultType="long" order="AFTER">
			select LAST_INSERT_ID() 
		</selectKey> 
		insert into auth_user(auth_id,auth_type,auth_number,auth_name,create_time)
		values(#{authId},IFNULL(#{userType},''),#{authNumber},#{authName},#{createTime})
	</insert>
	
	<select id="userList"  parameterType="map" resultMap="UserResultMap">
		select distinct u.user_id,u.auth_id,u.auth_number,u.auth_name,u.create_time from
		auth_user u
		<where>
			<if test="roleId != '' and roleId != null">
				(select role_id from t_user_role r where u.user_id = r.user_id and r.role_id = #{roleId})
			</if>
			<if test="authName != '' and authName != null">
				and u.auth_name like CONCAT('%',#{authName},'%')
			</if>
		</where> 
		<if test="pageBean != null">
			limit #{start},#{rows};
		</if>
	</select>
	
	<select id="userCount"  parameterType="map" resultType="int">
		SELECT
			count(*) AS total
		FROM
			auth_user u
		<where>
			<if test="roleId != '' and roleId != null">
				(select role_id from t_user_role r where u.user_id = r.user_id and r.role_id = #{roleId})
			</if>
			<if test="authName != '' and authName != null">
				and u.auth_name like CONCAT('%',#{authName},'%')
			</if>
		</where> 
	</select>
	
	
	<select id="findUserByUserId"  parameterType="String" resultType="int">
		select * as total from auth_user
		where user_id = #{userId}
	</select>
	
	<delete id="deleteUser">
		delete from auth_user where user_id in 
		<foreach collection="array" item="userId"  index="index" separator="," open="(" close=")">
			#{userId}
		</foreach>
	</delete>
	<!-- 删除用户时删除对应的用户和角色的对应的关系 -->
	<delete id="deleteUserRole">
		delete from t_user_role where user_id in 
		<foreach collection="array" item="userId"  index="index" separator="," open="(" close=")">
			#{userId}
		</foreach>
	</delete>
	
	
	
	

	

 
</mapper>