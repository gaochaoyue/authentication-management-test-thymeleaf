<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bboss.dao.mysql.RoleDao">
 
 <!--   
    namespace：必须与对应的接口全类名一致  
    id:必须与对应接口的某个对应的方法名一致  
    
    public String getRoleNameById(int roleId);
		//String sql="select roleName from t_role where roleId=?";
		
	
	public String getAuthIdsById(int roleId);
		//String sql="select authIds from t_role where roleId=?";
	
	
	public List<Role> roleList(Map<String,Object> map);
	
	public int roleCount(Role role);
	
	public int roleDelete(String delIds);
		//String sql="delete from t_role where roleId in ("+delIds+")";
		
	
	public int roleAdd(Role role);
		//String sql="insert into t_role values(null,?,'',?)";
		
	public int roleUpdate(Role role);
		//String sql="update t_role set roleName=?,roleDescription=? where roleId=?";
	
	
	public int roleAuthIdsUpdate(Role role);
		//String sql="update t_role set authIds=? where roleId=?";
	
      
 --> 
 	<!-- 管理权限 -->
 
 	<select id="getRoleNameById"  parameterType="int" resultType="String">
		select roleName from t_role where roleId=#{roleId}
	</select>
	
	<select id="getAuthIdByRoleId"  parameterType="int" resultType="int">
		select auth_id from t_role_auth where role_id=#{roleId}
	</select>
	
	
	<select id="roleList"  parameterType="map" resultType="com.bboss.model.Role">
		select roleId,roleName,authIds,IFNULL(roleType,'') as roleType,roleDescription from t_role
		where  roleName not LIKE '%管理%'
		<if test="roleName != '' and roleName != null">
			and roleName like CONCAT('%',#{roleName},'%')
		</if>
		<if test="pageBean != null">
			limit #{pageStart},#{pageRows}
		</if>
	</select>
	
	<select id="roleCount"  parameterType="map" resultType="int">
		select count(*) as total from t_role
		<if test="roleName != '' and roleName != null">
			where roleName like CONCAT('%',#{roleName},'%')
		</if>
	</select>
	
	<delete id="roleDelete"  parameterType="map">
		delete from t_role where roleId in 
		<foreach collection="roleIds" item="roleId" separator="," open="(" close=")">
			#{roleId}
		</foreach>
	</delete>
	
	<insert id="roleAdd"  parameterType="com.bboss.model.Role">
		insert into t_role(roleName,authIds,roleTypeType,roleDescription) values(#{roleName},'',#{roleType},#{roleDescription})
	</insert>
	
	<update id="roleUpdate"  parameterType="com.bboss.model.Role">
		update t_role set roleName=#{roleName},roleType =#{roleType},roleDescription=#{roleDescription} where roleId=#{roleId}
	</update>
	
	<update id="roleAuthIdsUpdate"  parameterType="com.bboss.model.Role">
		update t_role set authIds=#{authIds} where roleId=#{roleId}
	</update>
	
	
	<!-- 鉴权 -->
	

	
	 
	 <select id="findUserRoleByUserId" parameterType="Long" resultType="com.bboss.model.Role">
	 	  SELECT r.roleId,r.roleName,r.roleType,r.roleDescription
			FROM t_role r,
				 t_user_role ur
			WHERE r.roleId = ur.role_id and ur.user_id = #{userId}
	 </select>
	 
	 <insert id="addRoleUser" parameterType="map">
		  INSERT INTO t_user_role (user_id, role_id)
		  VALUE(#{userId},#{roleId})	
	 </insert>
	
	
	
	

</mapper>